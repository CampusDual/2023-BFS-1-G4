<?xml version="1.0" encoding="UTF-8"?>
<JdbcEntitySetup
        xmlns="http://www.ontimize.com/schema/jdbc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.ontimize.com/schema/jdbc http://www.ontimize.com/schema/jdbc/ontimize-jdbc-dao.xsd"
        catalog="" schema="${mainschema}" table="trip"
        datasource="mainDataSource" sqlhandler="dbSQLStatementHandler">
    <DeleteKeys>
        <Column>id_trip</Column>
    </DeleteKeys>
    <UpdateKeys>
        <Column>id_trip</Column>
    </UpdateKeys>
    <GeneratedKey>id_trip</GeneratedKey>
    <Queries>
        <Query id="all_trips">
            <AmbiguousColumns>
                <AmbiguousColumn name="id_user" prefix="t" />
            </AmbiguousColumns>
            <!--
                The query retrieves all trips that meet the specified conditions.
                It selects all columns from the trip table and free_seats from the difference between number of seats of a car and the bookings in this trip.
                The WHERE clause filters trips based on the date being greater than or equal to the current date.
            -->
            <Sentence>
                <![CDATA[
                    SELECT (c.seats - count(b.*)) as free_seats, t.*, c.id_car_brand, c.id_car_model, tu.name
                    FROM trip t
                    JOIN car c ON t.id_car = c.id_car
                    JOIN tuser tu ON tu.user_ = t.id_user
                    LEFT JOIN booking b ON b.id_trip = t.id_trip
                    #WHERE#
                        AND date >= cast(now() as date)
                    GROUP BY c.seats, t.id_trip, c.id_car_brand, c.id_car_model, tu.name
                    HAVING (c.seats - count(b.*)) > 0
                ]]>
            </Sentence>
        </Query>

        <Query id="get_user">
            <!--
                The query retrieves the user ID from the trip table based on the specified conditions.
                It selects the id_user column from the trip table.
                The WHERE clause filters the rows based on the provided conditions.
            -->
            <Sentence>
                <![CDATA[
             SELECT
              id_user
            FROM trip
            #WHERE#
           ]]>
            </Sentence>
        </Query>

        <Query id="booking_info">
            <!--
                The query retrieves booking information for trips.
                It selects various columns from different tables, including origin, destination, date, time, name, surname1, surname2,
                and calculates the remaining free seats using a left join with the booking table and a group by clause.
                The WHERE clause filters the rows based on the provided conditions.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_trip" prefix="t" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>origin_title</Column>
                <Column>origin_address</Column>
                <Column>destination_titles</Column>
                <Column>destination_address</Column>
                <Column>date</Column>
                <Column>time</Column>
                <Column>name</Column>
                <Column>surname1</Column>
                <Column>surname2</Column>
                <Column>free_seats</Column>
                <Column>id_trip</Column>
                <Column>id_car</Column>
                <Column>id_car_brand</Column>
                <Column>id_car_model</Column>
                <Column>brand_name</Column>
                <Column>model_name</Column>
                <Column>car_registration</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT t.origin_title, t.origin_address, t.destination_title, t.destination_address, t.date, t.time,
                    tu.name, tu.surname1 , tu.surname2, (c.seats - count(b.*)) as free_seats, t.id_trip, t.id_car,
                    c.id_car_brand, c.id_car_model, c.car_registration, cb.brand_name, cm.model_name
                    FROM trip t
                    JOIN car c ON t.id_car = c.id_car
                    JOIN car_brand cb ON c.id_car_brand = cb.id_car_brand
                    JOIN car_model cm ON c.id_car_model = cm.id_car_model
                    JOIN tuser tu ON t.id_user = tu.user_
                    LEFT JOIN booking b ON b.id_trip = t.id_trip
                    #WHERE#
                    GROUP BY t.origin_title, t.origin_address, t.destination_title, t.destination_address, t.date, t.time,
                    tu.name, tu.surname1 , tu.surname2, c.seats, t.id_trip, t.id_car, c.id_car_brand, c.id_car_model, c.car_registration,
                    cb.brand_name, cm.model_name
                ]]>
            </Sentence>
        </Query>
        <Query id="trip_detail">
            <!--
                The query retrieves trip details along with the number of cars for each trip.
                It selects columns from the trip and car tables, calculates the number of cars using a right join,
                and groups the results based on the trip ID and user ID.
                The WHERE clause filters the rows based on the provided conditions.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_trip" prefix="t" />
                <AmbiguousColumn name="id_user" prefix="c" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>origin_title</Column>
                <Column>origin_address</Column>
                <Column>destination_titles</Column>
                <Column>destination_address</Column>
                <Column>date</Column>
                <Column>time</Column>
                <Column>number_cars</Column>
                <Column>id_trip</Column>
                <Column>id_user</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
            SELECT count(c.*) as number_cars, t.origin_title, t.origin_address, t.destination_title, t.destination_address, t.date, t.time, t.id_trip, c.id_user
            FROM trip t
            RIGHT JOIN car c ON t.id_user = c.id_user
            #WHERE#
            GROUP BY t.id_trip, c.id_user
           ]]>
            </Sentence>
        </Query>
        <Query id="more_trips">
            <!--
                The query retrieves trip details along with the number of cars for each trip.
                It selects columns from the trip and car tables, calculates the number of cars using a right join,
                and groups the results based on the trip ID and user ID.
                The WHERE clause filters the rows based on the provided conditions.
            -->
            <AmbiguousColumns>
                <AmbiguousColumn name="id_user" prefix="t" />
            </AmbiguousColumns>
            <ValidColumns>
                <Column>more_trips</Column>
                <Column>id_user</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT count(b.*) as more_trips, b.id_user
                    FROM booking b
                    JOIN trip t ON b.id_trip = t.id_trip
                    #WHERE#
                    GROUP BY b.id_user
                    ORDER BY more_trips ASC
                    LIMIT 3
                ]]>
            </Sentence>
        </Query>
        <Query id="historical_trips">
            <!--
                The query retrieves trip details along with the number of cars for each trip.
                It selects columns from the trip and car tables, calculates the number of cars using a right join,
                and groups the results based on the trip ID and user ID.
                The WHERE clause filters the rows based on the provided conditions.
            -->
            <ValidColumns>
                <Column>trips_last_month</Column>
                <Column>trips_current_month</Column>
                <Column>id_user</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT count(t.*) as trips_current_month, null trips_last_month
                    FROM trip t
                    #WHERE#
                        AND t."date" BETWEEN DATE_TRUNC('month', CURRENT_DATE) AND (DATE_TRUNC('month', CURRENT_DATE) + INTERVAL '1 month' - INTERVAL '1 day')
                    GROUP BY t.id_user, t."date"
                    UNION
                    SELECT null trips_current_month, count(t.*) as trips_last_month
                    FROM trip t
                    #WHERE#
                        AND t."date" BETWEEN DATE_TRUNC('month', CURRENT_DATE) - interval '1 month' AND (DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 day')
                    GROUP BY t.id_user
                ]]>
            </Sentence>
        </Query>
        <Query id="number_trips_on_booking">
            <ValidColumns>
                <Column>id_trip</Column>
                <Column>number_bookings</Column>
            </ValidColumns>
            <Sentence>
                <![CDATA[
                    SELECT
                    #COLUMNS#
                    FROM numberbookings
                    #WHERE#
                ]]>
            </Sentence>
        </Query>
    </Queries>
</JdbcEntitySetup>